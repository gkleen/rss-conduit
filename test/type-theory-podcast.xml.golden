Just (RssDocument {documentVersion = Version {versionBranch = [2], versionTags = []}, channelTitle = "The Type Theory Podcast", channelLink = URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, channelDescription = "A podcast about type theory", channelItems = [RssItem {itemTitle = "Episode 6: Aaron Stump on Cedille", itemLink = Just URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/2016/12/episode-6-aaron-stump-on-cedille/", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, itemDescription = "Episode 6: Aaron Stump on Cedille", itemAuthor = "", itemCategories = [], itemComments = Nothing, itemEnclosure = [RssEnclosure {enclosureUrl = URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/media/episode-6-aaron-stump-cedille.m4a", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, enclosureLength = 38880566, enclosureType = "audio/mp4"}], itemGuid = Just (GuidText "podlove-2016-10-06t16:00:49+00:00-402491c60bbf9f7"), itemPubDate = Just 2016-12-01 19:15:36 UTC, itemSource = Nothing, itemExtensions = NoItemExtensions},RssItem {itemTitle = "Episode 5: Bob Constable on CTT and Nuprl", itemLink = Just URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/2015/08/episode-5-bob-constable-on-ctt-and-nuprl/", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, itemDescription = "Episode 5: Bob Constable on CTT and Nuprl", itemAuthor = "", itemCategories = [], itemComments = Nothing, itemEnclosure = [RssEnclosure {enclosureUrl = URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/media/episode-5-bob-constable-nuprl.m4a", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, enclosureLength = 28591343, enclosureType = "audio/mp4"}], itemGuid = Just (GuidText "podlove-2015-07-20t14:06:14+00:00-38c68f4f73c8f8c"), itemPubDate = Just 2015-08-31 14:32:12 UTC, itemSource = Nothing, itemExtensions = NoItemExtensions},RssItem {itemTitle = "Episode 4: Stephanie Weirich on Zombie and Dependent Haskell", itemLink = Just URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/2015/04/episode-4-stephanie-weirich-on-zombie-and-dependent-haskell/", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, itemDescription = "In our fourth episode, we speak with Stephanie Weirich from the University of Pennsylvania on the Zombie language and Dependent Haskell. Stephanie is a long-time contributor to Haskell, having been involved in the design and implementation of features such as generalized algebraic datatypes, higher-rank polymorphism, type families, and promoted datatypes. She has also been a participant in Trellys, a project with the goal of combining proofs and programming in the same language.\r\n\r\nZombie is a different kind of dependently typed language, eschewing automatic \946-reduction in the type checker for an approach based on explicit equality rewriting, which enables new ways of combining proofs and programs, as well as new forms of proof automation. Meanwhile, as languages designed for dependently typed programming come closer to practical applicability, Haskell is also moving towards full dependent types. We discuss the challenges and opportunities available at the cutting edge of Haskell.", itemAuthor = "", itemCategories = [], itemComments = Nothing, itemEnclosure = [RssEnclosure {enclosureUrl = URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/media/episode-4-stephanie-weirich-zombie-haskell.m4a", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, enclosureLength = 30575823, enclosureType = "audio/mp4"}], itemGuid = Just (GuidText "podlove-2015-02-24t18:49:17+00:00-61f2e21203f9720"), itemPubDate = Just 2015-04-18 19:07:49 UTC, itemSource = Nothing, itemExtensions = NoItemExtensions},RssItem {itemTitle = "Episode 3: Dan Licata on Homotopy Type Theory", itemLink = Just URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/2015/01/episode-3-dan-licata-on-homotopy-type-theory/", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, itemDescription = "Episode 3: Dan Licata on Homotopy Type Theory", itemAuthor = "", itemCategories = [], itemComments = Nothing, itemEnclosure = [RssEnclosure {enclosureUrl = URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/media/episode-3-dan-licata-hott.m4a", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, enclosureLength = 36731577, enclosureType = "audio/mp4"}], itemGuid = Just (GuidText "podlove-2014-11-08t22:22:15+00:00-85b7c2517b1694d"), itemPubDate = Just 2015-01-07 20:02:22 UTC, itemSource = Nothing, itemExtensions = NoItemExtensions},RssItem {itemTitle = "Episode 2: Edwin Brady on Idris", itemLink = Just URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/2014/09/episode-2-edwin-brady-on-idris/", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, itemDescription = "In our second episode, we speak with Edwin Brady from the University of St. Andrews. Since 2008, Edwin has been working on Idris, a functional programming language with dependent types. This episode is very much about programming: we discuss the language Idris, its history, its implementation strategies, and plans for the future.", itemAuthor = "", itemCategories = [], itemComments = Nothing, itemEnclosure = [RssEnclosure {enclosureUrl = URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/media/episode-2-edwin-brady-idris.m4a", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, enclosureLength = 45011605, enclosureType = "audio/mp4"}], itemGuid = Just (GuidText "podlove-2014-09-19t13:41:11+00:00-9cdcb29d2eb5a94"), itemPubDate = Just 2014-09-26 07:58:48 UTC, itemSource = Nothing, itemExtensions = NoItemExtensions},RssItem {itemTitle = "Episode 1: Peter Dybjer on types and testing", itemLink = Just URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/2014/08/episode-1-peter-dybjer-on-type-theory-and-testing/", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, itemDescription = "We speak with Peter Dybjer about the relationship between QuickCheck-style testing and proofs and verification in type theory.", itemAuthor = "", itemCategories = [], itemComments = Nothing, itemEnclosure = [RssEnclosure {enclosureUrl = URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/media/episode-1-peter-dybjer-types-and-testing.m4a", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, enclosureLength = 26679088, enclosureType = "audio/mp4"}], itemGuid = Just (GuidText "podlove-2014-08-08t09:39:19+00:00-fc44ac5de1a79c9"), itemPubDate = Just 2014-08-13 06:18:02 UTC, itemSource = Nothing, itemExtensions = NoItemExtensions}], channelLanguage = "en-US", channelCopyright = "", channelManagingEditor = "", channelWebmaster = "", channelPubDate = Nothing, channelLastBuildDate = Just 2016-12-01 22:54:58 UTC, channelCategories = [], channelGenerator = "Podlove Podcast Publisher v2.6.2", channelDocs = Nothing, channelCloud = Nothing, channelTtl = Nothing, channelImage = Just (RssImage {imageUri = URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "/wp-content/cache/podlove/77/da02dbb19d4f65cd39b7b02362f7a2/the-type-theory-podcast_original.png", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, imageTitle = "The Type Theory Podcast", imageLink = URI {uriScheme = Scheme {schemeBS = "http"}, uriAuthority = Just (Authority {authorityUserInfo = Nothing, authorityHost = Host {hostBS = "typetheorypodcast.com"}, authorityPort = Nothing}), uriPath = "", uriQuery = Query {queryPairs = []}, uriFragment = Nothing}, imageWidth = Nothing, imageHeight = Nothing, imageDescription = ""}), channelRating = "", channelTextInput = Nothing, channelSkipHours = fromList [], channelSkipDays = fromList [], channelExtensions = NoChannelExtensions})